# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r4WrJoJ7azwg9zz7XllsYxe7lNQZw0eV
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import classification_report,accuracy_score
import seaborn as sn

data_0 = pd.read_csv('Blood_samples_dataset_balanced_2(f).csv')
data_1 = pd.read_csv('blood_samples_dataset_test.csv')

data = pd.concat([data_0, data_1])
print(data.shape)
pd.set_option("display.max_columns", None)
data.sample(10)

print(data.isnull().sum())

data.describe()

data['Disease'].unique()

X=data.drop(['Disease'],axis=1)
y=data['Disease']
le=LabelEncoder()
y_encoded=le.fit_transform(y)
print(set(y_encoded))

print(data["Disease"].value_counts(normalize=True))
data["Disease"] = LabelEncoder().fit_transform(data["Disease"])
plt.figure(figsize=(20, 15))
sn.heatmap(data.corr(), annot=True)

X_train,X_test,y_train,y_test=train_test_split(X,y_encoded,test_size=0.20)

model=DecisionTreeClassifier()
model.fit(X_train,y_train)
y_pred=model.predict(X_test)

print (classification_report(y_test,y_pred))
print("Accuracy:",accuracy_score(y_test,y_pred))

